name: Move Issue to IN_PROGRESS on Branch Creation

on:
  create:

jobs:
  update_issue_status:
    runs-on: ubuntu-latest
    steps:
      - name: Extract Issue Number from Branch Name
        id: extract_issue
        run: |
          BRANCH_NAME="${{ github.ref_name }}"
          echo "üîç Branch Name: $BRANCH_NAME"

          ISSUE_NUMBER=$(echo "$BRANCH_NAME" | grep -oP '\d+' | head -n 1)
          if [ -z "$ISSUE_NUMBER" ]; then
            echo "üö® –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –Ω–æ–º–µ—Ä Issue –∏–∑ –∏–º–µ–Ω–∏ –≤–µ—Ç–∫–∏!"
            exit 1
          fi

          echo "‚úÖ –ò–∑–≤–ª–µ—á—ë–Ω ISSUE_NUMBER: $ISSUE_NUMBER"
          echo "ISSUE_NUMBER=$ISSUE_NUMBER" >> $GITHUB_ENV

      - name: Get Issue ID from Project
        id: get_issue_id
        run: |
          RESPONSE=$(curl -X POST https://api.github.com/graphql \
            -H "Authorization: Bearer ${{ secrets.TOKEN_AUTOMATIZATION }}" \
            -H "Content-Type: application/json" \
            -d @- <<EOF
            {
              "query": "mutation {
                updateProjectV2ItemFieldValue(input: { 
                projectId: \"$ID_PROJECT_SKILLDOR\", 
                itemId: \"$ISSUE_ID\", 
                fieldId: \"$ID_COLUMN_STATUS_NEED_DEFINITION_SKILLDOR\", 
                value: { singleSelectOptionId: \"$ID_COLUMN_STATUS_IN_PROGRESS_SKILLDOR\" }
            }) { clientMutationId }
          }"
          }
          EOF
          )

          echo "üîÑ API Response: $RESPONSE"

          if echo "$RESPONSE" | jq -e '.errors' >/dev/null; then
          echo "üö® –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å Issue!"
          exit 1
          fi

          echo "‚úÖ Issue —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–º–µ—â—ë–Ω –≤ IN_PROGRESS!"


      - name: Move Issue to IN_PROGRESS
        run: |
          RESPONSE=$(curl -X POST https://api.github.com/graphql \
            -H "Authorization: Bearer ${{ secrets.TOKEN_AUTOMATIZATION }}" \
            -H "Content-Type: application/json" \
            -d @- <<EOF
          {
            "query": "mutation {
              updateProjectV2ItemFieldValue(input: { 
                projectId: \\\"${{ secrets.ID_PROJECT_SKILLDOR }}\\\", 
                itemId: \\\"$ISSUE_ID\\\", 
                fieldId: \\\"${{ secrets.ID_COLUMN_STATUS_NEED_DEFINITION_SKILLDOR }}\\\", 
                value: { singleSelectOptionId: \\\"${{ secrets.ID_COLUMN_STATUS_IN_PROGRESS_SKILLDOR }}\\\" }
              }) { clientMutationId }
            }"
          }
          EOF
          )

          echo "üîÑ API Response: $RESPONSE"
          if echo "$RESPONSE" | jq -e '.errors' >/dev/null; then
            echo "üö® –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å Issue!"
            exit 1
          fi

          echo "‚úÖ Issue —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–º–µ—â—ë–Ω –≤ IN_PROGRESS!"
